trigger: none
  # branches:
  #   include:
  #     - master
  # paths:
  #   exclude:
  #     - documentation/*
  #     - README.md

pool:
  vmImage: 'ubuntu-latest'

parameters:
- name: stage
  default: "preprod"
  values:
    - preprod_init
    - preprod
variables:
  - name: env
    value: ${{ replace(parameters.stage, '_init', '') }}

stages:
  - stage: preprod
    jobs:
      - job: "Initial_Setup"
        condition: contains('${{ parameters.stage }}', '_init')
        steps:
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                az login -u "$AZURE_USERNAME" -p "$AZURE_PASSWORD"
                az account set --subscription 009e0a99-8c4c-49fb-8efb-e79bdaeb58d0

                wget https://releases.hashicorp.com/terraform/0.12.29/terraform_0.12.29_linux_amd64.zip
                unzip terraform_0.12.29_linux_amd64.zip
                mv terraform ~/bin

                terraform init
                terraform plan
                terraform apply -auto-approve
              workingDirectory: "./resources/preprod_init"
            displayName: "Terraform data/secrets"

          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                MODULE_PATH="." ENV="${{ variables.env }}" bash ./setup-database.sh
              workingDirectory: "./resources/modules/database"
            displayName: "Scaffold database"

      - job: "Build"
        condition: not(contains('${{ parameters.stage }}', '_init'))
        steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '12.x'
        - script: |
            npm i && npm run build
          displayName: 'NPM install and build'
        - script: |
            npm run test:docker
          displayName: 'Run tests'
        - task: Docker@2
          displayName: Build and Push
          inputs:
            containerRegistry: 'dockerscoparella'
            repository: 'garrypassarella/scoparella'
            command: 'buildAndPush'
            Dockerfile: 'Dockerfile'
            tags: |
              scoparella_api
        - script: |
            az login -u "$AZURE_USERNAME" -p "$AZURE_PASSWORD"
            az account set --subscription 009e0a99-8c4c-49fb-8efb-e79bdaeb58d0

            wget https://releases.hashicorp.com/terraform/0.12.29/terraform_0.12.29_linux_amd64.zip
            unzip terraform_0.12.29_linux_amd64.zip
            mv terraform ~/bin

            cd resources/preprod
            terraform init
            terraform plan
            terraform apply -auto-approve
          workingDirectory: "./resources/preprod"
          displayName: 'Terraform setup cloud resources'
        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |
              ENV="${{ variables.env }}" bash ./apply-database-objects.sh
            workingDirectory: "./resources/modules/database_update"
          displayName: "Apply database objects"
