# trigger:
  # branches:
  #   include:
  #     - master
  # paths:
  #   exclude:
  #     - documentation/*
  #     - README.md

pool:
  vmImage: 'ubuntu-latest'

parameters:
- name: stage
  default: "preprod"
  values:
    - preprod_init
    - preprod

stages:
  - stage: preprod
    jobs:
      - job: "Initial_Setup"
        condition: eq('${{ parameters.stage }}', 'preprod_init')
        steps:

          - task: AzureCLI@2
            displayName: "Terraform"
            inputs:
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              workingDirectory: 'resources/preprod_init'
              useGlobalConfig: true
              addSpnToEnvironment: true
              inlineScript: |
                wget https://releases.hashicorp.com/terraform/0.12.29/terraform_0.12.29_linux_amd64.zip
                unzip terraform_0.12.29_linux_amd64.zip
                mv terraform ~/bin
                terraform init
                terraform plan
                terraform apply -auto-approve
            env:
              ARM_TENANT_ID: ${{ parameters.armTenantId }}
              ARM_SUBSCRIPTION_ID: ${{ parameters.armSubscriptionId }}
              ARM_CLIENT_ID: ${{ parameters.armClientId }}
              ARM_CLIENT_SECRET: ${{ parameters.armClientSecret }}
          # There is a terraform task available in Devops, we should probably use that instead...

      - job: "Build"
        condition: eq('${{ parameters.stage }}', 'preprod')
        steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '12.x'
        - script: |
            npm i && npm run build
          displayName: 'NPM install and build'
        - script: |
            npm run docker:deps
            sleep 10
          displayName: 'Spin up SQL Server'
        - script: |
            npm t
          displayName: 'Run tests'
        - task: Docker@2
          displayName: Build and Push
          inputs:
            containerRegistry: 'dockerscoparella'
            repository: 'garrypassarella/scoparella'
            command: 'buildAndPush'
            Dockerfile: 'Dockerfile'
            tags: |
              scoparella_api
        - script: |
            cd resources/preprod
            terraform init
            terraform plan
            terraform apply -auto-approve
          displayName: 'Terraform setup cloud resources'
